{"name":"Android-iconics","tagline":"Android-Iconics is a library to use (almost) any alternative iconfont in your projects. It allows you to add any Android-Iconics compatible typeface-library-addon to your project and you are able to start using that font.","body":"#Android-Iconics\r\n\r\nAndroid-Iconics is a library to use (almost) any alternative iconfont in your projects. It allows you to add any Android-Iconics compatible typeface-library-addon to your project and you are able to start using that font.\r\n\r\nSo you are asking where can you use those icons?\r\n\r\nUse them in any IconicTextView just by defining the icon within the text. An example for FontAwesome would look like {icon-faw-github}. You see pretty easy right?\r\n\r\nYou can also use it on any text by using the simple builder pattern. Here's the shortest possible sample:\r\n\r\n```java\r\nnew Iconics.IconicsBuilder().ctx(this).on(YOUR_TEXT_VIEW).build();\r\n```\r\n\r\nBut wait! There's more. You can also use it as Drawable anywhere. Create it like this:\r\n\r\n```java\r\nnew IconicsDrawable(this, \"faw-adjust\").color(Color.RED)\r\n```\r\n\r\nIf you don't know the name of the icon, and the typeface-library-addon allows it you can also do the following:\r\n```java\r\nnew IconicsDrawable(this, new FontAwesome(), FontAwesome.FontAwesomeIcon.faw_android.character()).color(Color.GREEN)\r\n```\r\n\r\nTo showcase a some simple usecases, here are screenshots:\r\n\r\n![Image](https://raw.githubusercontent.com/mikepenz/Android-Iconics/master/DEV/screenshots/screenshot_1_small.jpg)\r\n![Image](https://raw.githubusercontent.com/mikepenz/Android-Iconics/master/DEV/screenshots/screenshot_2_small.jpg)\r\n\r\n\r\n##Include in your project\r\nThe Android-Iconics Library is pushed to [Maven Central], so you just need to add the following dependency to your `build.gradle`.\r\n\r\n```javascript\r\ndependencies {\r\n\tcompile 'com.mikepenz.iconics:library:0.2.0@aar'\r\n}\r\n```\r\n\r\n##Use typeface-library-addons\r\nOne basic function of this library is the feature to drop in new typefaces on the go. The default font of this project is FontAwesome (http://fontawesome.io), but you can create and add as many as you like.\r\n\r\nThe main idea is that the community can create libraries which can be used without the need of an extra library. \r\n\r\nSo how does it work?\r\nJust add the dependency of any and as many typface-library-addons in your build.gradle just beneath the android-iconics dependency.\r\n\r\n```javascript\r\ndependencies {\r\n\tcompile 'com.mikepenz.iconics:library:0.2.0@aar'\r\n\tcompile 'com.mikepenz.iconics:meteocons-typeface:0.1.0@aar'\r\n}\r\n```\r\n\r\nTo enable them for the IconicsTextView too follow the steps under [Register typeface](#register-typeface)\r\n\r\n##Advanced usage\r\n\r\n###working with multiple typeface-library-addons and icons\r\nIn some cases you will use multiple typefaces. It is really easy to decide which icon of which typeface-library-addon should be used. Each of those got a unique 3-character long identifier which is the prefix of every single icon. \r\nFontAwesome - \"faw\"\r\nMeteocons - \"met\"\r\n\r\nEvertime you want to use an icon in a text just write {icon-faw-adjust}, ... \r\nIf you create an IconicsDrawable or define the style for a specific icon within an text just remove the \"icon-\" prefix and you're fine.\r\n\r\n\r\n###Register typeface\r\nIn some cases you will love to use a typeface-library-addon in your IconicTextView and everywhere else without the need of adding it as typeface all the time.\r\n\r\nJust override your Application and register your additional fonts like this:\r\n```java\r\npublic class CustomApplication extends Application {\r\n    @Override\r\n    public void onCreate() {\r\n        super.onCreate();\r\n        Iconics.registerFont(new Meteoconcs());\r\n        Iconics.registerFont(new CustomFont());\r\n    }\r\n}\r\n```\r\nand set it in your AndroidManifest.xml as name\r\n```java\r\n    <application\r\n        android:name=\"com.mikpenz.iconics.sample.CustomApplication\"\r\n        ...\r\n```\r\n\r\n###Advanced IconicsBuilder\r\nEverything is easy and simple. Right? But now you got a single icon within your textview and you need additional styling?\r\nJust define the style for all icons or only a specific one. You can find this in the PlaygroundActivity of the sample too.\r\n```java\r\nnew Iconics.IconicsBuilder().ctx(this)\r\n                .style(new ForegroundColorSpan(Color.WHITE), new BackgroundColorSpan(Color.BLACK), new RelativeSizeSpan(2f))\r\n                .styleFor(\"faw-adjust\", new BackgroundColorSpan(Color.RED))\r\n                .on(tv1)\r\n                .build();\r\n```\r\n\r\n###String icon-key or typeface enum\r\nSometimes you won't like to use the icon-key (\"faw-adjust\") like this, but use the enum provided by a sepcific font. Both is valid:\r\n```java\r\n  new IconicsDrawable(this, \"faw-adjust\")\r\n```\r\n```java\r\n  new IconicsDrawable(this, new FontAwesome(), FontAwesome.FontAwesomeIcon.faw_adjust.character())\r\n```\r\n\r\n##Contribute\r\nWill follow soon\r\n\r\n\r\n##Credits\r\n- [Joan Zapata](https://github.com/JoanZapata) He is the creator of [Android-Iconify](https://github.com/JoanZapata/android-iconify) which gave me the idea of this project. It implements some really great concepts, and i only tried to improve them and give it some more flexibility.\r\n\r\n\r\n#Developed By\r\n\r\n* Mike Penz - http://mikepenz.com - <mikepenz@gmail.com>\r\n\r\n\r\n#License\r\n\r\n    Copyright 2014 Mike Penz\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}